version: 3.7
services:

  app:
    image: app_flights:V2
    container_name: app_flights
    build:
      context: ./api-gateway
      dockerfile: dockerfile
    env_file: .env
    ports:
      -80:3000
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - ms-nestjs

  microservice-flights:
    image: microservice_flights:V2
    container_name: microservice_flights
    build:
      context: ./microservice-flights
      dockerfile: dockerfile
    env_file: .env
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - ms-nestjs

  microservice-passengers:
    image: microservice_passengers:V2
    container_name: microservice_passengers
    build:
      context: ./microservice_passengers
      dockerfile: dockerfile
    env_file: .env
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - ms-nestjs

  microservice-users:
    image: microservice_users:V2
    container_name: microservice_users
    build:
      context: ./microservice_users
      dockerfile: dockerfile
    env_file: .env
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - ms-nestjs

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rmq
    ports:
      - "5672:5672"
      - "15672/15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    networks:
      - ms-nestjs

  mongodb:
    image: mongo:4.4
    container_name: mongodb
    restart: always
    environment:
      - MONGO_DATA_DIR=./sourcefiles/data/db
      - MONGO_LOG_DIR=./sourcefiles/dev/null
    volumes:
      - ./sourcefiles/mongodb:/data/db:rw
    ports:
      - "27017:27017"
    networks:
      - ms-nestjs

volumes:
  mongodb:
    driver: local

networks:
  ms_sabuesos:
    driver: bridge